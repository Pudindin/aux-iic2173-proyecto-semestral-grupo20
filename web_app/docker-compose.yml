version: "3"
services:
  db:
    container_name: "postgres_db"
    image: "postgres:12-alpine"
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    env_file:
      - ./pg-init-scripts/data-base.env
    networks:
      - node-pg-connect


  web:
    build: .
    container_name: "express_app"
    depends_on:
      - db
    env_file:
      - ./.env
    networks:
      - node-pg-connect
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules

  webserver:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
    #  - web-root:/var/www/html
    #  - certbot-etc:/etc/letsencrypt
    #  - certbot-var:/var/lib/letsencrypt
    depends_on:
      - web
    networks:
      - node-pg-connect

  #certbot:
  #  image: certbot/certbot
  #  container_name: certbot
  #  volumes:
  #    - certbot-etc:/etc/letsencrypt
  #    - certbot-var:/var/lib/letsencrypt
  #    - web-root:/var/www/html
  #  depends_on:
  #    - webserver
  #  command: certonly --webroot --webroot-path=/var/www/html --email dhvasquez@uc.cl --agree-tos --no-eff-email --staging -d thiovas.cl -d www.thiovas.cl

volumes:
  pg-init-scripts:
  nginx-conf:
  #certbot-etc:
  #certbot-var:
  #web-root:
  #  driver: local
  #  driver_opts:
  #    type: none
  #    device: ./web_app/src/public/
  #    o: bind

networks:
  node-pg-connect:
    driver: bridge
